package spring.project.securitynico.security;import lombok.AllArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import spring.project.securitynico.entities.Role;import spring.project.securitynico.entities.User;import java.util.*;public class UserPrincipal implements UserDetails {    private User user;    private Role role;    public UserPrincipal(User user) {        this.user = user;    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        List<GrantedAuthority> authorities = new ArrayList<>();        List<Role> roles = new ArrayList<>();        for (Role role : roles) {            authorities.add(new SimpleGrantedAuthority("ROLE_" + role.name));        }        return authorities;    }    @Override    public String getPassword() {        return this.user.getPassword();    }    @Override    public String getUsername() {        return this.user.getUsername();    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return this.user.getActive();    }}